getwd()
ls
cls
clear
clear screen
dir
dir()
clear
exit
clear()
cls()
swirl()
install.packages("swirl")
library(swirl)
swirl()
1:20
pi:100
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
q()
swirl()
install.packages("swirl")
library(swirl)
swirl()
0
bye()
swirl()
main()
main()
main()
num_vect <- (0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
nv <- num_vect >= 6
num_vect >=6
my_char = c("My", "name", "is")
my_char <- c("My", "name", "is")
my_char
past(my_char, collapse = " ")
paste(my_char, collapse = " ")
my_char <- c(my_char, "Matthew")
my_name <- c(my_char, "Matthew")
my_name
my_name <- c(my_name, collapse = " ")
my_name <- paste(my_name, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello" , "world!", sep = " ")
paste("X", "Y", "Z", sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44,NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep (NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
!is.na(x)
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar = 2, norf = NA)
vect
name(vect)
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector < c(4,5))
dim(my_vector < c(4,5)
)
dim(my_vector) <-  c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(data = 1:20,nrow = 4, ncol = 5, by row = FALSE, dimnames = NULL)
my_matrix2 <- matrix(data = 1:20,nrow = 4, ncol = 5, byrow = FALSE, dimnames = NULL)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
add2 <- function(x,y){
x + y
}
add2(3,5)
above10 <- function(x){
use <- x > 10
x[use]
}
above <- function(x,n){
use <- x > n
x(use)
}
x <- 1:20
above(x, 12)
above10 <- function(x){
use <- x > 10
x[use]
}
above <- function(x,n){
use <- x > n
x(use)
}
above(x, 12)
x <- 1:20
above(x,n)
above(x,12)
above10 <- function(x){
use <- x > 10
x[use]
}
above <- function(x,n){
use <- x > n
x[use]
}
above(x,12)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] < mean(y[,i])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] < mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(airquality)
cube -> function(x,n){
x^3
}
cube <- function(x,n){
x^3
}
cube(3)
x <- 1:10
if (x> 5) {
x <- 0
}
f <- function(x){
g <- function(y) {
y+z
}
z <- 4
x+g(x)
}
z<-10
f(3)
?iris
iris(virginica)
iris
mean(iris(virginica)
)
iris3
test <- iris
library(datasets)
data(iris)
iris
s<- split(test, test$Species)
s
sapply(s, function(x), colMeans(x[,c("Sepal.Length")],na.rm = TRUE))
sapply(s, function(x) colMeans(x[,c("Sepal.Length")],na.rm = TRUE))
sapply(s, function(x) colMeans(x[,c("Sepal.Length","Species")],na.rm = TRUE))
sapply(s, function(x) colMeans(x[,c("Sepal.Length","Petal.Length")],na.rm = TRUE))
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 1, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mtcars
sapply (split(mtcars$hp, mtcars$cyl),abs)
sapply (split(mtcars$hp, mtcars$cyl),mean)
test<- sapply (split(mtcars$hp, mtcars$cyl),mean)
?abs
abs(test$4 - test$8)
abs(test[1] - test[3])
debug(ls)
ls
ls()
setwd("~/GitHub/ProgrammingAssignment2")
exit
quit
quit()
exit()
exit
where
C
cc
cc
exit
)
()
debug()
debug(fun)
undebug(ls)
